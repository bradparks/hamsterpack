/////////////////////////////////
//File generated by hamsterpack//
/////////////////////////////////
//Modify if you wanna die LOL!!//
/////////////////////////////////
#include "hamsterpack.h"
#include "miniz.h"

//////////////////
//Implementation//
//////////////////
bool HamsterPack::sInited = false;
mz_zip_archive HamsterPack::zip_archive;

bool HamsterPack::init(){
    if(sInited){
        return true;
    }

    memset(&zip_archive, 0, sizeof(zip_archive));
    mz_bool status;
    status = mz_zip_reader_init_mem(&zip_archive, hamster_data, hamster_size, 0);

    if(status){
        sInited = true;
    }

    return status;
}

void HamsterPack::exit(){
    if(sInited){
        sInited = false;
    }
    mz_zip_reader_end(&zip_archive);
}

bool HamsterPack::readFile(const string& filename, vector<char>& data){
    if(!sInited){
        return false;
    }

    void* p;
    size_t size;
    p = mz_zip_reader_extract_file_to_heap(&zip_archive, filename.c_str(), &size, 0);

    if(p != NULL){
        data = vector<char>(size);
        memcpy(data.data(), p, size);
        return true;
    }
    return false;
}

bool HamsterPack::loadString(const string& filename, string& result){
    vector<char> data;
    bool res = readFile(filename, data);
    if(res){
        result = string(data.data());
        return true;
    }
    return false;
}

